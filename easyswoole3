FROM ubuntu:22.04.5

#version defined
#ENV PHP_VERSION php7.4

# 设置策略
RUN touch /etc/apt/apt.conf.d/99verify-peer.conf \ && echo >>/etc/apt/apt.conf.d/99verify-peer.conf "Acquire { https::Verify-Peer false }"

# 设置镜像源
RUN sed -i 's#http://archive.ubuntu.com/#https://mirrors.tuna.tsinghua.edu.cn/ubuntu/#' /etc/apt/sources.list;

## 清理镜像
RUN apt-get clean
RUN apt-get autoclean
RUN apt-get update
RUN apt-get upgrade -y

RUN apt-get install -y wget
RUN apt-get install -y vim
RUN apt-get install -y inetutils-ping
RUN apt-get install -y telnet

## 设置时区
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -y tzdata \
    && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && dpkg-reconfigure --frontend noninteractive tzdata

## install libs
RUN apt-get install -y          \
    curl                        \
    zip                         \
    unzip                       \
    #openssl-devel \
    libcurl4-openssl-dev       \
    libssl-dev                 \
    #gcc-c++ \
    gcc         \
    g++ \
    make \
    libtool \
    autoconf \
    automake \
    git \
    net-tools \
    #telnet-server \
    #pcre-devel \
    #pcre \
    #pcre-devel \
    #zlib \
    #zlib-devel\
    zlib1g-dev               \
    supervisor                 \
    psmisc



RUN apt-get install -y memcached libmemcached-dev
RUN apt-get install -y redis-server
#RUN mkdir -p /usr/lib/x86_64-linux-gnu/include/libmemcached \ && ln -s /usr/include/libmemcached/memcached.h /usr/lib/x86_64-linux-gnu/include/libmemcached/memcached.h

# 更改php源
RUN apt-get install -y software-properties-common
RUN LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
RUN apt-get update

## 安装php
RUN apt-get install -y    \
   php7.4                \
   php7.4-curl           \
   php7.4-fpm            \
   php7.4-gd             \
   php7.4-intl           \
   php7.4-imap           \
   php7.4-xml            \
   php7.4-xmlrpc         \
   php7.4-zip               \
   php7.4-sqlite3        \
   php7.4-mbstring       \
   php7.4-json           \
   php7.4-mysqlnd        \
   php7.4-cli            \
   php7.4-dev            \
   php7.4-redis          \
   php7.4-mysqli         \
   php7.4-oauth          \
   php7.4-memcache       \
   php7.4-memcached      \
   php7.4-mcrypt         \
   php7.4-lua            \
   php7.4-json           \
   php7.4-bcmath         \
   php7.4-mongodb        \
   php7.4-imagick        \
   php7.4-common

# composer
RUN wget -c https://mirrors.aliyun.com/composer/composer.phar \
    && chmod 755 composer.phar \
    && mv composer.phar /usr/bin/composer

## use aliyun composer
RUN composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/


# fswatch ext
RUN wget https://github.com/emcrisostomo/fswatch/releases/download/1.15.0/fswatch-1.15.0.tar.gz -O fswatch.tar.gz \
    && mkdir -p fswatch \
    && tar zxvf fswatch.tar.gz -C fswatch --strip-components=1 \
    && rm -rf fswatch.tar.gz \
    && ( \
    cd fswatch \
    && ./configure  \
    && make \
    && make install  \
    ) \
    && rm -rf fswatch;


# swoole ext
RUN wget https://github.com/swoole/swoole-src/archive/v4.5.2.tar.gz -O swoole.tar.gz \
   && mkdir -p swoole \
   && tar -xf swoole.tar.gz -C swoole --strip-components=1 \
   && rm -rf swoole.tar.gz \
   && ( \
   cd swoole \
   && phpize \
   && ./configure --enable-openssl \
   && make \
   && make install \
   ) \
  && echo 'extension=swoole.so' > /etc/php/7.4/cli/conf.d/25-swoole.ini \
  && echo 'extension=swoole.so' > /etc/php/7.4/mods-available/25-swoole.ini \
  && echo 'extension=swoole.so' > /etc/php/7.4/fpm/conf.d/25-swoole.ini \
  && cd .. \
  && rm -rf swoole


# inotify
RUN wget http://pecl.php.net/get/inotify-2.0.0.tgz -O inotify.tar.gz \
    && mkdir -p inotify \
    && tar zxvf inotify.tar.gz -C inotify --strip-components=1 \
    && rm inotify.tar.gz \
    && ( \
    cd inotify \
    && phpize \
    && ./configure  \
    && make \
    && make install \
    ) \
    && echo 'extension=inotify.so' > /etc/php/7.4/cli/conf.d/20-inotify.ini \
    && echo 'extension=inotify.so' > /etc/php/7.4/mods-available/20-inotify.ini \
    && echo 'extension=inotify.so' > /etc/php/7.4/fpm/conf.d/20-inotify.ini \
    && cd .. \
    && rm -r inotify

# xlswriter
RUN wget http://pecl.php.net/get/xlswriter -O xlswriter.tar.gz \
    && mkdir -p xlswriter \
    && tar zxvf xlswriter.tar.gz -C xlswriter --strip-components=1 \
    && rm -rf xlswriter.tar.gz \
    && ( \
    cd xlswriter \
    && phpize \
    && ./configure --enable-reader \
    && make \
    && make install \
    ) \
    && echo 'extension=xlswriter.so' > /etc/php/7.4/cli/conf.d/20-xlswriter.ini \
    && echo 'extension=xlswriter.so' > /etc/php/7.4/mods-available/20-xlswriter.ini \
    && echo 'extension=xlswriter.so' > /etc/php/7.4/fpm/conf.d/20-xlswriter.ini \
    && cd .. \
    && rm -rf xlswriter;

# blake2
RUN cd /tmp \
    && rm -rf blake2 \
    && git clone https://github.com/strawbrary/php-blake2 ./blake2 \
    && ( \
    cd blake2 \
    && phpize \
    && ./configure --enable-blake2 \
    && make \
    && make install \
    ) \
    && echo 'extension=blake2.so' > /etc/php/7.4/cli/conf.d/20-blake2.ini \
    && echo 'extension=blake2.so' > /etc/php/7.4/mods-available/20-blake2.ini \
    && echo 'extension=blake2.so' > /etc/php/7.4/fpm/conf.d/20-blake2.ini \
    && cd .. \
    && rm -rf blake2;

# re2c
#RUN wget https://github.com/skvadrik/re2c/archive/0.16.tar.gz -O re2c.tar.gz \
#    && mkdir -p re2c \
#    && tar zxvf re2c.tar.gz -C re2c --strip-components=1 \
#    && rm -rf re2c.tar.gz \
#    && ( \
#    cd re2c \
#    && ./configure  \
#    && make \
#    && make install \
#    ) \
#    && echo 'extension=re2c.so' > /etc/php.d/20-re2c.ini \
#    && rm -rf re2c;

# libzip
RUN wget http://nih.at/libzip/libzip-1.2.0.tar.gz -O libzip.tar.gz \
    && mkdir -p libzip \
    && tar -zxvf libzip.tar.gz -C libzip --strip-components=1 \
    && rm -rf libzip.tar.gz \
    && ( \
    cd libzip \
    && ./configure  \
    && make \
    && make install \
    ) \
    && cd .. \
    && rm -rf libzip;

# zip
RUN wget http://pecl.php.net/get/zip-1.19.2.tgz -O zip.tar.gz \
    && mkdir -p zip \
    && cp /usr/local/lib/libzip/include/zipconf.h /usr/local/include/zipconf.h \
    && tar zxvf zip.tar.gz -C zip --strip-components=1 \
    && rm -rf zip.tar.gz \
    && ( \
    cd zip \
    && phpize \
    && ./configure  \
    && make \
    && make install \
    ) \
    && echo 'extension=zip.so' > /etc/php/7.4/cli/conf.d/20-zip.ini \
    && echo 'extension=zip.so' > /etc/php/7.4/mods-available/20-zip.ini \
    && echo 'extension=zip.so' > /etc/php/7.4/fpm/conf.d/20-zip.ini \
    && cd .. \
    && rm -rf zip;

# 安装扩展
RUN pecl install grpc http://pecl.php.net/package/gRPC/1.48.1
RUN echo 'extension=grpc.so' > /etc/php/7.4/cli/conf.d/grpc.ini

RUN pecl install protobuf http://pecl.php.net/package/protobuf/3.21.5
RUN echo 'extension=protobuf.so' > /etc/php/7.4/cli/conf.d/protobuf.ini

# 调试工具
RUN apt-get install -y gdb


#指定容器里面的路径
WORKDIR /mnt/server/php
CMD ["tail", "-f", "/dev/null"]